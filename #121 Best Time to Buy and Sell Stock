#121, Easy, Best Time to Buy and Sell Stock

Prompt:
You are given an array prices where prices[i] is the price of a given stock on the ith day.
You want to maximize your profit by choosing a single day to buy one stock and choosing a different day in the future to sell that stock.
Return the maximum profit you can achieve from this transaction. If you cannot achieve any profit, return 0.

My Solution:
class Solution:
    def maxProfit(self, prices: List[int]) -> int:
        maxprof = 0
        length=len(prices)
        left,right = 0,1
        
        while right != length:
            currentMax = (prices[right] - prices[left])
            if prices[left] > prices[right]:
                left = right
            elif maxprof < currentMax:
                maxprof = currentMax
            right += 1
        return maxprof
        
Time Complexity: O(n) Linear Time
Space Complexity: O(1) Constant Space
