1791 Easy. Find Center of Star Graph

Prompt:
There is an undirected star graph consisting of n nodes labeled from 1 to n.
A star graph is a graph where there is one center node and exactly n - 1 edges that connect the center node with every other node.
You are given a 2D integer array edges where each edges[i] = [ui, vi] indicates that there is an edge between the nodes ui and vi.
Return the center of the given star graph.

My Solution:
class Solution:
    def findCenter(self, edges: List[List[int]]) -> int:
        if edges[0][0] != edges[1][0] and edges[0][0] != edges[1][1]:
            return edges[0][1]
        else:
            return edges[0][0]
            
Time Complexity: O(1) **Constant Time** because we are always going to compare the first and second edge, we know a number that shows up multiple times in an edge will
be the center of a star graph.
Space Complexity: O(1) **Constant Space** we are not using any extra memory.
