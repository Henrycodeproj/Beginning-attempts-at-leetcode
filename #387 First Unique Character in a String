#387 Easy. First Unique Character in a String

Prompt:
Given a string s, find the first non-repeating character in it and return its index. If it does not exist, return -1.

My Solution:
class Solution:
    def firstUniqChar(self, s: str) -> int:
        dict = {}
        for i in range(len(s)):
            if s[i] not in dict:
                dict[s[i]] = 1
            else:
                dict[s[i]]+= 1
                
        for item in dict.items():
            if item[1] == 1:
                return s.index(item[0])
        return -1
        
Time Complexity: O(n) Linear time because we create a counter with a dictionary for every element and only visit every character n times
Space Complexity: O(1) constant space becaues there is a constant amount of letters in the alphabet
