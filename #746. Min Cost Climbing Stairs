#746 Easy. Min Cost Climbing Stairs

DS: Dynamic Programming

Prompt:
You are given an integer array cost where cost[i] is the cost of ith step on a staircase. Once you pay the cost, you can either climb one or two steps.
You can either start from the step with index 0, or the step with index 1.
Return the minimum cost to reach the top of the floor.

My Solution
    def minCostClimbingStairs(self, cost: List[int]) -> int:
        for i in range(2, len(cost)):
            cost[i] += min(cost[i-2], cost[i-1])
        return min(cost[-2], cost[-1])
        
Time Complexity: O(N) Linear time because we are traversing through the entire list
Space Complexity: O(1) Constant Space because we are adjust values of the existing array only.
